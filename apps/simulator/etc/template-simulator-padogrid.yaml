#
# Copyright (c) 2023 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Define one or more equations
equations:
    # Required unique equation name. Required for configuring publisher
  - name: null

    # Optional equation formula (for documentation only)
    # Example: y=sin(x)
    formula: null

    # Optional equation description (for documentation only)
    description: null

    # Optional time format.
    # Default: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
    timeFormat: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"

    # Optional start time. Must conform to timeFormat. Ex: "2022-10-10T09:00:00.000-0400"
    # Default: current time.
    startTime: "2022-10-10T09:00:00.000-0400"

    # Optional time interval in milliseconds
    # Default: 500
    timeInterval: 500

    # Optional miniumn base (x) value. The base is equivalent to x in y=x.
    # Default: -1
    minBase: -1

    # Optional maximum base (x) value. The base is equivalent to x in y=x.
    # Default: 1
    maxBase: 1

    # Optional base value spread (delta). x is incremented by this value before each calculation.
    # Default: 0.1
    baseSpread: 0.1

    # Optional percentage of the random number to add to the equation result before
    # the base average, (maxBase-minBase)/2, is added to the computed value.
    # Default: 0.1
    jitter: 0.1

    # Optional multiplier. The jitter computed value is multiplied by this value. Set this
    # attribute to amplify or deamplify the final value.
    # Default: 1.0
    multiplier: 1.0

    # Calculation function. Must be a static method with the following signature.
    #    public final double my_function(double x);
    # The following classes contain useful functions.
    #   java.lang.Math
    #    padogrid.simulator.eq.Equations
    # Example: java.lang.Math.sin
    #          padogrid.simulator.eq.circle
    # Must specify one of calculationFunction and calculationClass. calculationFunction overrides
    # calculationClass.
    calculationFunction: null

    # Calculation class. Must implement padogrid.simulator.ICalculation.
    # Must specify one of calculationFunction and calculationClass. calculationFunction overrides
    # calculationClass.
    calculationClass: null

    # Optional constant value. This value is added to the value returned by the calculation
    # function. Set this attribute to move the curve up or down along the y-axis.
    # Default: 0
    constant: 0

    # Optional cycle type. Valid values are REPEAT, REVERSE (case sensitive). If REPEAT, each
    # caculation cycle increases the base value starting from minBase. If REVERSE, upon reaching
    # the maxBase value, the caculation cycle is reversed by decrementing the base value.
    # Default: REVERSE
    type: REVERSE

    # Optional base time reset. This value is added to the 'startTime' adjusted base time when the
    # base (x) value reaches 'minBase' or 'maxBase'. The current base time is first reset to the
    # date portion and then this value is added to it as shown in the following example.
    #
    #   resetBaseTime: 86_400_000 (1 day)
    #   startTime: "2022-10-10T09:00:00.000-0400"
    #   base time: "2024-11-11T11:12:34.565-0400"
    #   new base time: "2024-11-11T09:00:00.000-0400" + resetStartTime
    #   new base time: "2024-11-12T09:00:00.000-0400"
    #
    # The default value of 0 does nothing and proceeds with the current base time.
    #
    # By resetting the base time, you can simulate a realistic time capsule on a window of curve
    # catured by minBase and maxBase.
    #
    # Default: 0
    resetBaseTime: 0

publishers:        
    # Product name. Valid values are MQTT|HAZELCAST
    # Required product name.
    # Default: MQTT
  - product: MQTT
    
    # Optional parameter to enable (true) or disable (false) the publisher.
    # Default: true
    enabled: true

    # Required unique publisher name.
    name: null

    # Required equation name. This must be one of the equation names defined in
    # in the equations element.
    equationName: null

    # Data structure. Each product has one or more data structure types as follows.
    #
    # - mqtt
    #     dataStructure:
    #       type: TOPIC
    #       name: <topic_name>
    #
    # - hazelcast
    #     # Hazelcast dataStructure default is TOPIC
    #     dataStructure:
    #       type: MAP|RMAP|QUEUE|TOPIC|RTOPIC
    #       name: <map_name>
    #       keyType: FIXED|SEQUENCE|TIME|UUID
    #       keyPrefix: null
    #       keySquenceStart: 1
    #     dataStructure:
    #       type: RMAP
    #       name: <replicated_map_name>
    #       keyType: FIXED|SEQUENCE|TIME|UUID
    #       keyPrefix: null
    #       keySquenceStart: 1
    #     dataStructure:
    #       type: QUEUE
    #       name: <queue_name>
    #     dataStructure:
    #       type: TOPIC
    #       name: <topic_name>
    #     dataStructure:
    #       type: RTOPIC
    #       name: <reliable_topic_name>
    dataStructure:
      # Required data structure type.
      #   MQTT valid valued: TOPIC)
      #   Hazelcast valid values: MAP|RMAP|QUEUE|TOPIC|RTOPIC
      # Default: TOPIC
      type: TOPIC
      
      # Required data structure name.
      #   MQTT: Topic name
      #   Hazelcast: Name of map, replicated map, queue, topic, or reliable topic
      # Default: null <undefined>
      name: null
      
      # Key type. Applies to Hazelcast data structures only. All keys are string.
      # Valid values are SEQUENCE|TIME|UUID.
      #    FIXED - Key value is a single fixed value. Set keyValue as the key value.
      #            If keyPrefix is not defined then the key value is set to 'key'.
      #    SEQUENCE - Key values are sequenced starting from keySequenceStart.
      #    TIME - Key values are time stamps
      #    UUID - Key values are UUID.
      # Default: SEQUENCE
      keyType: FIXED
      
      # Key value for the FIXED key type.
      # Default: key
      keyValue: key
      
      # Key squence start number. Key sequence is incremented starting from this number.
      # Default: 1
      keySquenceStart: 1
    
    # Initial delay in milliseconds. The publisher waits this amount of time before start
    # publishing data.
    # Default: 0
    initialDelay: 0

    # Time interval in milliseconds. The publisher periodically publishes data at this
    # timeInterval.
    timeInterval: 500
