#!/usr/bin/env bash
SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Build the MQTT simulator environment

SYNOPSIS
   $EXECUTABLE [-clean] [-?]

DESCRIPTION
   Builds the MQTT simulator environment.

OPTIONS
   -clean
             Cleans the build environment.

DEFAULT
   $EXECUTABLE

EOF
exit
fi

pushd $APP_DIR > /dev/null
sed -i$__SED_BACKUP -e "s|<padogrid.version>.*$|<padogrid.version>$PADOGRID_VERSION</padogrid.version>|g" pom.xml
popd > /dev/null

# Build app
pushd $APP_DIR > /dev/null
if [ "$CLEAN" == "true" ]; then
   echo "Removing jar files..."
   echo "   $APP_DIR/lib/*"
   echo "   $PADOGRID_WORKSPACE/lib/*"
   rm $APP_DIR/lib/*
   rm $PADOGRID_WORKSPACE/lib/*
   mvn clean
else
   # Install the required padogrid packages to the local repo
   installMavenPadogridJar padogrid-common
   installMavenPadogridJar padogrid-mqtt
   #mvn package -Dmaven.plugin.validation=brief
   mvn package
   # Remove log4j jars to avoid version conflicts from GemFire, Hazelcast, PadoGrid.
   rm $APP_DIR/lib/log4j*
   cp $APP_DIR/lib/* $PADOGRID_WORKSPACE/lib/
fi

# Update MQTT config files that have the deprecated attributes
# v0.9.29
if [ $PADOGRID_MAJOR_VERSION_NUMBER -eq 0 ] && [ $PADOGRID_MINOR_VERSION_NUMBER -eq 9 ] &&  [ $PADOGRID_UPDATE_VERSION_NUMBER -ge 29 ]; then
   sed -i${__SED_BACKUP} -e 's|pluginName:.*$|pluginNames: [questdb]|' etc/mqttv5-questdb.yaml
   sed -i${__SED_BACKUP} -e 's|pluginName:.*$|pluginNames: [questdb]|' etc/mqttv5-simulator.yaml
fi

popd > /dev/null
